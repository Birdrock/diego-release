#!/bin/bash

gitHooksDir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
SCRIPTS_DIR="$(realpath ${gitHooksDir}/../scripts)"

diff_output=$(${SCRIPTS_DIR}/check-for-windows-drift)
if [ $? -ne 0 ] ; then
  echo $'\e[31mdiego and diego windows have diverged. output:\e[0m'
  echo
  echo "$diff_output"
  exit 1
fi

modified_packages=$(${SCRIPTS_DIR}/sync-package-specs)
if [ -n "$modified_packages" ]; then
  echo $'\e[31mthe following package specs are not staged:\e[0m'
  echo
  echo "$modified_packages"
  exit 1
fi

canonical_import_paths_enforced=$(${SCRIPTS_DIR}/sync-canonical-import-paths)
if [ -n "$canonical_import_paths_enforced" ]; then
  echo $'\e[31mthe following submodules are not properly enforcing canonical import paths:\e[0m'
  echo
  echo "$canonical_import_paths_enforced"
  exit 1
fi

protected_repos=("diego-release" "diego-release.git")
current_repo=$(git config --get remote.origin.url | sed -e 's,.*/\(.*\),\1,')

protected_branch='master'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

containsElement () {
    local e
    for e in "${@:2}"
    do
        [[ "$e" == "$1" ]] && return 0
    done
    return 1
}
containsElement $current_repo "${protected_repos[@]}"
repo_is_protected=$?

if [ $repo_is_protected -eq 0 ] && [ $protected_branch = $current_branch ]
then
    read -p "You're about to push master, is that what you intended? [y|n] " -n 1 -r < /dev/tty
    echo
    if echo $REPLY | grep -E '^[Yy]$' > /dev/null
    then
        exit 0 # push will execute
    fi
    exit 1 # push will not execute
else
    exit 0 # push will execute
fi
